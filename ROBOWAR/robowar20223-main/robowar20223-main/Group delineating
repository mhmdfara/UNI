Project Summary: Connecting to Jetson Nano and Setting Up a Display

Objectives:
Establish an SSH connection to the Jetson Nano.
Set up a consistent IP address for the Jetson Nano.
Connect a 1.14 aft rib 135x240ips display to the Jetson Nano using ribbon cables and configure it appropriately.
Challenges and Solutions:
SSH Connection Issues:
Problem: Initial attempts to connect to the Jetson Nano via SSH encountered errors related to systemd, hostname resolution, and IP address mismatches.
Solution: Ensured that both the connecting device and the Jetson Nano were on the same local network. Used the command ssh username@IP_ADDRESS to connect using the IP address directly.
Dynamic IP Address:
Problem: The Jetson Nano had a dynamically assigned IP address which changed on each connection, making SSH difficult.
Solution: Attempted to set a static IP address for the Jetson Nano, but this faced challenges, including temporary name resolution failures.
Display Setup and Permission Issues:
Problem: Encountered permission denied errors when attempting to modify the /boot/extlinux/extlinux.conf file. Additionally, there were difficulties in setting up display permissions using the xhost command.
Solution: Used the sudo command for elevated privileges and attempted to work with Xorg settings. Explored I2C commands to communicate with the display.
Driver Installation for Display:
Problem: Need to identify and install the correct drivers for the 1.14 aft rib 135x240ips display.
Solution: The exact drivers were not identified during the conversation. However, it's crucial to refer to the display manufacturer's documentation and Jetson Nano resources for the right drivers and installation steps.
Wiring the Display:
Problem: Need to connect the 1.14 aft rib 135x240ips display to the Jetson Nano's J41 SPI interface using ribbon cables.
Solution: The exact wiring instructions were not provided during the conversation. Proper wiring instructions should be sought from the display's datasheet and Jetson Nano's documentation to ensure correct and safe connections.
Tools and Software Used:
PuTTY: For establishing an SSH connection.
Nano editor: For editing configuration files on the Jetson Nano.
i2c-tools: To interact with I2C devices like the display.
Various Linux commands for troubleshooting and system inspection.
Recommendations Moving Forward:
Continuously refer to the Jetson Nano's official documentation and the display's datasheet for accurate wiring, driver installation, and configuration steps.
Ensure that any changes to system configurations, especially those related to hardware interfaces, are backed up to avoid potential system failures.
When working with new devices or components, it's helpful to start with a minimal test setup to verify each step's functionality before integrating it into more complex setups.
Remember, when working with hardware, always ensure connections are powered off when making or changing connections, and always follow the manufacturer's recommendations and safety precautions.

All the code below is Chatgpt4 Generated.
We've integrated and fixed some of them, but basically everything is generated by gpt.

SSH and Connection Commands:

Connecting via SSH:
ssh username@IP_ADDRESS

Check current hostname:
hostname

Edit the hosts file (though you encountered issues accessing it):
sudo nano /etc/hosts

Permission and File Access:

Check file permissions:
ls -l /path/to/file

Provide write permissions (used as an example, not specifically for any file):
sudo chmod +w /path/to/file

Edit a system file with elevated permissions:
sudo nano /path/to/file

Display and Xorg:
Check if the X server is running:
ps aux | grep Xorg

Granting display permissions (though there were issues):
xhost +

I2C Tools:
Install I2C tools (Ubuntu/Debian based systems):
sudo apt-get install i2c-tools

Detect I2C devices:
i2cdetect -y 1

System Inspection:

Check running processes related to a specific term:
ps aux | grep TERM

Miscellaneous:
Editing udev rules for Teensy:
sudo nano /etc/udev/rules.d/10-teensy.rules

ROS-serial installation commands:
sudo apt-get install ros-melodic-rosserial-arduino
sudo apt-get install ros-melodic-rosserial


People part of this group are, Waltteri, Leevi, Emma, Pinja, Aleksi.
